{
	"fileTypes": [
		"epl",
		"mon",
		"evt"
	],
	"name": "epl",
	"patterns": [
		{
			"include": "#main"
		}
	],
	"scopeName": "source.epl",
	"uuid": "",
	"repository": {
		"main": {
			"patterns": [
				{
					"include": "#using"
				},
				{
					"include": "#containertypes"
				},
				{
					"include": "#types"
				},
				{
					"include": "#event"
				},
				{
					"include": "#monitor"
				},
				{
					"include": "#comments"
				}
			]
		},
		"action": {
			"patterns": [
				{
					"match": "(action)(\\s+)([a-zA-Z][0-9a-zA-Z]*(?:_[0-9a-zA-Z]+)*)",
					"captures": {
						"1": {
							"name": "keyword.epl"
						},
						"2": {
							"name": "text.epl"
						},
						"3": {
							"name": "variable.epl"
						}
					}
				},
				{
					"begin": "(\\()",
					"beginCaptures": {
						"1": {
							"name": "variable.parameter.epl"
						}
					},
					"patterns": [
						{
							"include": "#parameters"
						}
					],
					"end": "(\\))",
					"endCaptures": {
						"1": {
							"name": "variable.parameter.epl"
						}
					}
				},
				{
					"begin": "(\\{)",
					"beginCaptures": {
						"1": {
							"name": "text.epl"
						}
					},
					"patterns": [
						{
							"include": "#body"
						}
					],
					"end": "(})",
					"endCaptures": {
						"1": {
							"name": "text.epl"
						}
					}
				}
			]
		},
		"assignment": {
			"patterns": [
				{
					"match": "([a-zA-Z][0-9a-zA-Z]*(?:_[0-9a-zA-Z]+)*)(\\s?)(\\:=)",
					"captures": {
						"1": {
							"name": "variable.epl"
						},
						"2": {
							"name": "text.epl"
						},
						"3": {
							"name": "punctuation.epl"
						}
					}
				}
			]
		},
		"bareVariable": {
			"patterns": [
				{
					"match": "\\b([a-zA-Z][0-9a-zA-Z]*(?:_[0-9a-zA-Z]+)*)\\b",
					"name": "variable.epl"
				}
			]
		},
		"body": {
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#string"
				},
				{
					"include": "#assignment"
				},
				{
					"include": "#punctuation"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#types"
				},
				{
					"include": "#containertypes"
				},
				{
					"include": "#action"
				},
				{
					"include": "#method"
				},
				{
					"include": "#numeric"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"match": "(\/\/.*)",
					"name": "comment.epl"
				},
				{
					"begin": "(\/\\*)",
					"beginCaptures": {
						"1": {
							"name": "comment.epl"
						}
					},
					"contentName": "comment.epl",
					"end": "(.*?\\*\/)",
					"endCaptures": {
						"1": {
							"name": "comment.epl"
						}
					}
				}
			]
		},
		"comments__1": {
			"patterns": []
		},
		"constants": {
			"patterns": [
				{
					"match": "(\\b)(true|false|INFO|DEBUG|WARN|ERROR)(\\b)",
					"name": "constant.epl"
				}
			]
		},
		"containertypes": {
			"patterns": [
				{
					"match": "(sequence|optional|dictionary|stream)",
					"name": "entity.name.type.epl"
				},
				{
					"begin": "(\\<)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.epl"
						}
					},
					"patterns": [
						{
							"include": "#containertypes__1"
						}
					],
					"end": "(\\>)",
					"endCaptures": {
						"1": {
							"name": "punctuation.epl"
						}
					}
				}
			]
		},
		"containertypes__1": {
			"patterns": [
				{
					"include": "#containertypes"
				},
				{
					"match": "(decimal|float|integer|string|boolean|any|listener|channel|context)",
					"name": "entity.name.type.epl"
				}
			]
		},
		"event": {
			"patterns": [
				{
					"match": "(event)(\\s+)([a-zA-Z][0-9a-zA-Z]*(?:_[0-9a-zA-Z]+)*)",
					"captures": {
						"1": {
							"name": "keyword.epl"
						},
						"2": {
							"name": "text.epl"
						},
						"3": {
							"name": "variable.epl"
						}
					}
				},
				{
					"begin": "(\\{)",
					"beginCaptures": {
						"1": {
							"name": "text.epl"
						}
					},
					"patterns": [
						{
							"include": "#body"
						}
					],
					"end": "(})",
					"endCaptures": {
						"1": {
							"name": "text.epl"
						}
					}
				}
			]
		},
		"inside_array": {
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#punctuation"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#numeric"
				}
			]
		},
		"inside_quotes": {
			"patterns": [
				{
					"match": "(\\\\(?:\\\\|\"))",
					"name": "string.epl"
				},
				{
					"match": "([^\\x{0022}\\x{005c}]+)",
					"name": "string.epl"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"match": "(\\b)(import|rstream|from|in|partition|retain|group|by|having|or|and|xor|not|select|constant|as|at|if|then|else|spawn|emit|route|enqueue|send|to|print|log|die|while|do|return|break|continue|for|try|catch|ifpresent|switch|case|default|throw|new|on|all|wait)(\\b)",
					"name": "keyword.epl"
				}
			]
		},
		"member": {
			"patterns": [
				{
					"match": "\\b(\\.)([a-zA-Z][0-9a-zA-Z]*(?:_[0-9a-zA-Z]+)*)\\b",
					"captures": {
						"1": {
							"name": "punctuation.epl"
						},
						"2": {
							"name": "variable.epl"
						}
					}
				}
			]
		},
		"method": {
			"patterns": [
				{
					"begin": "\\b(\\.)([a-zA-Z][0-9a-zA-Z]*(?:_[0-9a-zA-Z]+)*)(\\s?)(\\()",
					"beginCaptures": {
						"1": {
							"name": "punctuation.epl"
						},
						"2": {
							"name": "variable.epl"
						},
						"3": {
							"name": "text.epl"
						},
						"4": {
							"name": "variable.parameter.epl"
						}
					},
					"patterns": [
						{
							"include": "#parameters"
						}
					],
					"end": "(\\))",
					"endCaptures": {
						"1": {
							"name": "variable.parameter.epl"
						}
					}
				}
			]
		},
		"monitor": {
			"patterns": [
				{
					"match": "(monitor)(\\s+)([a-zA-Z][0-9a-zA-Z]*(?:_[0-9a-zA-Z]+)*)(\\s?)",
					"captures": {
						"1": {
							"name": "keyword.epl"
						},
						"2": {
							"name": "text.epl"
						},
						"3": {
							"name": "variable.epl"
						},
						"4": {
							"name": "text.epl"
						}
					}
				},
				{
					"begin": "(\\{)",
					"beginCaptures": {
						"1": {
							"name": "text.epl"
						}
					},
					"patterns": [
						{
							"include": "#body"
						}
					],
					"end": "(})",
					"endCaptures": {
						"1": {
							"name": "text.epl"
						}
					}
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"match": "(\\b)([-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?([df])?)(\\b)",
					"name": "constant.numeric.epl"
				}
			]
		},
		"parameters": {
			"patterns": [
				{
					"include": "#types"
				},
				{
					"include": "#containertypes"
				},
				{
					"include": "#punctuation"
				},
				{
					"include": "#string"
				},
				{
					"include": "#numeric"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#member"
				},
				{
					"include": "#bareVariable"
				}
			]
		},
		"punctuation": {
			"patterns": [
				{
					"match": "(\\+|\\-|\\*|=|,|>|<|;)",
					"name": "punctuation.epl"
				}
			]
		},
		"string": {
			"patterns": [
				{
					"begin": "(\")",
					"beginCaptures": {
						"1": {
							"name": "punctuation.epl"
						}
					},
					"patterns": [
						{
							"include": "#inside_quotes"
						}
					],
					"end": "(\")",
					"endCaptures": {
						"1": {
							"name": "punctuation.epl"
						}
					}
				}
			]
		},
		"types": {
			"patterns": [
				{
					"match": "(\\b)(decimal|float|integer|string|boolean|any|listener|channel|context)(\\b)",
					"captures": {
						"1": {
							"name": "text.epl"
						},
						"2": {
							"name": "entity.name.type.epl"
						},
						"3": {
							"name": "text.epl"
						}
					}
				}
			]
		},
		"using": {
			"patterns": [
				{
					"match": "(using|package)(\\s+)([a-zA-Z]+[.a-zA-Z]*)(;)",
					"captures": {
						"1": {
							"name": "keyword.epl"
						},
						"2": {
							"name": "text.epl"
						},
						"3": {
							"name": "variable.epl"
						},
						"4": {
							"name": "text.epl"
						}
					}
				}
			]
		}
	}
}